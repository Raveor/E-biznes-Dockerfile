
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                               controllers.FrontendController.index

# auth
POST    /api/auth/login                 controllers.AuthController.login
POST    /api/auth/register              controllers.AuthController.register
POST    /api/auth/logout                controllers.AuthController.logout

# book routes
GET     /api/books                      controllers.BooksController.getAllBooks
GET     /api/book/:id                   controllers.BooksController.getBookById(id: Integer)
PUT     /api/book                       controllers.BooksController.addBook
DELETE  /api/book/:id                   controllers.BooksController.deleteBook(id: Integer)
PATCH   /api/book/:id                   controllers.BooksController.editBook(id: Integer)

# book type routes
GET     /api/bookTypes                  controllers.BookTypeController.getAllTypes
GET     /api/bookType/:id               controllers.BookTypeController.getTypeById(id: Integer)
PUT     /api/bookType                   controllers.BookTypeController.addType
DELETE  /api/bookType/:id               controllers.BookTypeController.deleteType(id: Integer)
PATCH   /api/bookType/:id               controllers.BookTypeController.editType(id: Integer)


# publishing house routes
GET     /api/publishingHouses           controllers.PublishingHouseController.getAllPublishingHouse
GET     /api/publishingHouse/:id        controllers.PublishingHouseController.getPublishingHouseById(id: Integer)
PUT     /api/publishingHouse            controllers.PublishingHouseController.addPublishingHouse
DELETE  /api/publishingHouse/:id        controllers.PublishingHouseController.deletePublishingHouse(id: Integer)
PATCH   /api/publishingHouse/:id        controllers.PublishingHouseController.editPublishingHouse(id: Integer)

# author routes
GET     /api/authors                    controllers.AuthorController.getAllAuthors
GET     /api/author/:id                 controllers.AuthorController.getAuthorById(id: Integer)
PUT     /api/author                     controllers.AuthorController.addAuthor
DELETE  /api/author/:id                 controllers.AuthorController.deleteAuthor(id: Integer)
PATCH   /api/author/:id                 controllers.AuthorController.editAuthor(id: Integer)

# orders routes
GET     /api/orders                     controllers.OrdersController.getAllOrders
GET     /api/order/:id                  controllers.OrdersController.getOrderById(id: Integer)
PUT     /api/order                      controllers.OrdersController.addOrder
DELETE  /api/order/:id                  controllers.OrdersController.deleteOrder(id: Integer)
PATCH   /api/order/:id                  controllers.OrdersController.editOrder(id: Integer)

# book types routes
GET     /api/bookTypes                  controllers.BookTypeController.getAllTypes
GET     /api/bookType/:id               controllers.BookTypeController.getTypeById(id: Integer)
PUT     /api/bookType                   controllers.BookTypeController.addType
DELETE  /api/bookType/:id               controllers.BookTypeController.deleteType(id: Integer)
PATCH   /api/bookType/:id               controllers.BookTypeController.editType(id: Integer)

# clients routes
GET     /api/clients                    controllers.UserController.getAllUsers
GET     /api/client/:id                 controllers.UserController.getUserById(id: Integer)
PATCH   /api/client/:id                 controllers.UserController.editUser(id: Integer)

GET         /password/forgot                 controllers.ForgotPasswordController.view
POST        /password/forgot                 controllers.ForgotPasswordController.submit
GET         /password/reset/:token           controllers.ResetPasswordController.view(token: java.util.UUID)
POST        /password/reset/:token           controllers.ResetPasswordController.submit(token: java.util.UUID)
GET         /password/change                 controllers.ChangePasswordController.view
POST        /password/change                 controllers.ChangePasswordController.submit

GET         /account/email/:email            controllers.ActivateAccountController.send(email: String)
GET         /account/activate/:token         controllers.ActivateAccountController.activate(token: java.util.UUID)

# Map static resources from the /public folder to the /assets URL path
GET     /*file                          controllers.FrontendController.assetOrDefault(file)